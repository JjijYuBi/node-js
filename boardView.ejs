<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <meta name="color-scheme" content="light dark" />
    <link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css"
/>
</head>
<style>
    table, th, tr, td {
        border : 2px solid black;
        border-collapse: collapse;
        padding : 5px;
        text-align: center;
    }
</style>
    
<body>
    <main class="container">
    <div id="app">
        <h1>상세보기</h1>
        <input type="text" value="<%=jsonData.boardNo%>" id="boardNo" hidden>
        <table>
            <tr>
                <th>번호</th>
                <th>{{boardDetail.boardNo}}</th>
                <th>작성자</th>
                <td>{{boardDetail.userId}}</td>
                <th>작성일</th>
                <td>{{boardDetail.cdatetime}}</td>
            </tr>
            <tr>
                <th>제목</th>
                <td colspan="6" v-if="editFlg==false">{{boardDetail.title}}</td>
                <td colspan="6" v-if="editFlg==true"><input v-model="boardDetail.title"></td>
            </tr>
            
            <tr>
                <th>내용</th>
                <td colspan="6" v-if="editFlg==false">{{boardDetail.contents}}</td>
                <td colspan="6" v-if="editFlg==true" ><input v-model="boardDetail.contents"></td>
            </tr>
            

        </table>
        <button v-if="editFlg == false" @click="fnEditOn">수정</button>
        <button v-if="editFlg == true" @click="fnEditEnd">완료</button>
        <button v-if="editFlg == true" @click="fnEditExit">취소</button>
        <button @click="fnDelete">삭제</button>
        <button @click="fnMoveList">돌아가기</button>
    </div>
</main>

</body>
</html>

<script>
    var app = new Vue({
    el: '#app',
    data: {
    	boardDetail : {},
        editFlg : false,
        boardNo : ""
    },
    methods: {
        boardView : async function() {
       var self = this;
       self.boardNo = document.getElementById("boardNo").value;
       const response = await fetch(`http://localhost:3000/boardView.dox?boardNo=${self.boardNo}`);
       const jsonData = await response.json();
        console.log(jsonData);
        if(jsonData.msg == "success"){
           self.boardDetail = jsonData.results[0];
        }else{
            
        }
       
       
   },
   fnEditOn : function(){
    var self = this;
    self.editFlg = true;

   },
   fnEditEnd : async function(){
    var self = this;
    if(!confirm("정말 수정하시겠습니까?")){
        
        return;
    }
    
    var title = self.boardDetail.title;
    var contents = self.boardDetail.contents;
    const response = await fetch(`http://localhost:3000/boardEdit.dox?boardNo=${self.boardNo}&title=${title}&contents=${contents}`);
    const jsonData = await response.json();
    console.log(jsonData);
    if(jsonData.msg=="success"){
        alert("수정되었습니다.");
        self.editFlg = false;
        self.boardView();  
    }
   },
   fnDelete : async function(){
    var self = this;
    if(!confirm("정말 삭제하시겠습니까?")){
        return;
    }
    const response = await fetch(`http://localhost:3000/boardDelete.dox?boardNo=${self.boardNo}`);
    const jsonData = await response.json();
    console.log(jsonData);
    if(jsonData.msg=="success"){
        alert("삭제되었습니다.");
        location.href="http://localhost:3000/boardList";
    } 
    
   },
   fnMoveList : function(){
    location.href="http://localhost:3000/boardList";
   },
   fnEditExit : function(){
    if(!confirm("수정을 그만두시겠습니까?")){
        return;
    }
    this.editFlg = false;
   }
	    },
        
    created: function() {
        var self = this;
        self.boardView();

    }
    
});
</script>